import { sendAvatarRequest } from '../services/apiService.js';
import { createCharacterFromInit } from '../core/character.js';
import { showTab } from './app.js';

let nameAnswer = "";
let appearanceAnswer = "";
let uploadedAvatarData = null;

function showOnboardingModal() {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –º–æ–¥–∞–ª–∫–∞
  if (document.getElementById("onboardingModal")) {
    console.log("[üÜï] –ú–æ–¥–∞–ª–∫–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ");
    return;
  }

  console.log("[üÜï] –ó–∞–ø—É—Å–∫ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞: —Å–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞");
  const modal = document.createElement("div");
  modal.id = "onboardingModal";
  modal.className = "modal";
  modal.innerHTML = `
    <div class="modal-content">
      <h3>–°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞</h3>
      <p id="onboardingStep">–ü—Ä–∏–¥—É–º–∞–π –∏–º—è —Å–≤–æ–µ–º—É –ø–µ—Ä—Å–æ–Ω–∞–∂—É</p>
      <input id="onboardingInput" type="text" placeholder="–ò–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞" />
      <div class="modal-buttons">
        <button id="onboardingNext" class="modal-confirm">–î–∞–ª–µ–µ</button>
      </div>
    </div>`;
  document.body.appendChild(modal);

  const input = document.getElementById("onboardingInput");
  const nextButton = document.getElementById("onboardingNext");

  if (!input || !nextButton) {
    console.error("[üÜï] –ù–µ –Ω–∞–π–¥–µ–Ω—ã —ç–ª–µ–º–µ–Ω—Ç—ã: input=", !!input, "button=", !!nextButton);
    return;
  }

  console.log("[üÜï] –ö–Ω–æ–ø–∫–∞ #onboardingNext –Ω–∞–π–¥–µ–Ω–∞, –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏—è");
  // –ü—Ä—è–º—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
  nextButton.addEventListener("click", handleStep1);
  nextButton.addEventListener("mousedown", handleStep1);
  nextButton.addEventListener("touchstart", handleStep1);
  nextButton.addEventListener("pointerdown", handleStep1);
  nextButton.addEventListener("touchend", handleStep1);

  // –î–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ document
  document.addEventListener("click", function delegateClick(event) {
    if (event.target.id === "onboardingNext") {
      console.log("[üÜï] –ö–ª–∏–∫ –ø–æ #onboardingNext —á–µ—Ä–µ–∑ –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —Å–æ–±—ã—Ç–∏–µ:", event.type);
      handleStep1(event);
    }
  }, { once: true });

  // –û–±—Ö–æ–¥ Grammarly: –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Ñ–æ–∫—É—Å
  input.addEventListener("focus", () => console.log("[üÜï] –ü–æ–ª–µ –≤–≤–æ–¥–∞ –≤ —Ñ–æ–∫—É—Å–µ"));
  input.addEventListener("blur", () => console.log("[üÜï] –ü–æ–ª–µ –≤–≤–æ–¥–∞ –ø–æ—Ç–µ—Ä—è–ª–æ —Ñ–æ–∫—É—Å"));
  input.focus(); // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Ñ–æ–∫—É—Å–∏—Ä—É–µ–º –ø–æ–ª–µ
}

function handleStep1(event) {
  try {
    event.preventDefault();
    event.stopPropagation();
    console.log("[üÜï] –û–±—Ä–∞–±–æ—Ç–∫–∞ —à–∞–≥–∞ 1, —Å–æ–±—ã—Ç–∏–µ:", event.type);
    const input = document.getElementById("onboardingInput");
    if (!input) {
      console.error("[üÜï] –ü–æ–ª–µ –≤–≤–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ");
      return;
    }
    nameAnswer = input.value.trim();
    if (!nameAnswer) {
      alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –∏–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞.");
      return;
    }
    console.log("[üÜï] –ò–º—è –≤–≤–µ–¥–µ–Ω–æ:", nameAnswer);

    const modalContent = document.querySelector("#onboardingModal .modal-content");
    modalContent.innerHTML = `
      <h3>–°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞</h3>
      <p id="onboardingStep">–û–ø–∏—à–∏ –≤–Ω–µ—à–Ω–æ—Å—Ç—å –∏–ª–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä —Å–≤–æ–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞</p>
      <textarea id="onboardingAppearance" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –≤—ã—Å–æ–∫–∏–π –≤–æ–∏–Ω —Å —Ç—ë–º–Ω—ã–º–∏ –≥–ª–∞–∑–∞–º–∏ –∏–ª–∏ –≤–µ—Å—ë–ª—ã–π –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫"></textarea>
      <div class="modal-buttons">
        <button id="onboardingBack" class="modal-cancel">–ù–∞–∑–∞–¥</button>
        <button id="onboardingNext" class="modal-confirm">–î–∞–ª–µ–µ</button>
      </div>`;
    document.getElementById("onboardingBack").addEventListener("click", () => {
      showOnboardingModal();
    });
    document.getElementById("onboardingNext").addEventListener("click", handleStep2);
  } catch (e) {
    console.error("[üÜï] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —à–∞–≥–∞ 1:", e);
  }
}

function handleStep2(event) {
  try {
    event.preventDefault();
    event.stopPropagation();
    console.log("[üÜï] –û–±—Ä–∞–±–æ—Ç–∫–∞ —à–∞–≥–∞ 2, —Å–æ–±—ã—Ç–∏–µ:", event.type);
    const textarea = document.getElementById("onboardingAppearance");
    if (!textarea) {
      console.error("[üÜï] –¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ");
      return;
    }
    appearanceAnswer = textarea.value.trim();
    console.log("[üÜï] –û–ø–∏—Å–∞–Ω–∏–µ –≤–Ω–µ—à–Ω–æ—Å—Ç–∏/—Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞:", appearanceAnswer);

    const modalContent = document.querySelector("#onboardingModal .modal-content");
    modalContent.innerHTML = `
      <h3>–°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞</h3>
      <p id="onboardingStep">–ó–∞–≥—Ä—É–∑–∏ –∞–≤–∞—Ç–∞—Ä –∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏ —ç—Ç–æ—Ç —à–∞–≥</p>
      <input id="onboardingAvatar" type="file" accept="image/*" />
      <div class="modal-buttons">
        <button id="onboardingBack" class="modal-cancel">–ù–∞–∑–∞–¥</button>
        <button id="onboardingConfirm" class="modal-confirm">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å</button>
      </div>`;
    document.getElementById("onboardingBack").addEventListener("click", handleStep1);
    document.getElementById("onboardingConfirm").addEventListener("click", handleConfirmAvatar);
    document.getElementById("onboardingAvatar").addEventListener("change", handleAvatarUpload);
  } catch (e) {
    console.error("[üÜï] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —à–∞–≥–∞ 2:", e);
  }
}

function handleAvatarUpload(event) {
  try {
    event.preventDefault();
    event.stopPropagation();
    console.log("[üÜï] –ó–∞–≥—Ä—É–∑–∫–∞ –∞–≤–∞—Ç–∞—Ä–∞, —Å–æ–±—ã—Ç–∏–µ:", event.type);
    const fileInput = document.getElementById("onboardingAvatar");
    if (!fileInput || !fileInput.files || !fileInput.files[0]) {
      console.log("[üÜï] –§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É");
      return;
    }
    const file = fileInput.files[0];
    const reader = new FileReader();
    reader.onload = () => {
      uploadedAvatarData = reader.result;
      console.log("[üÜï] –ê–≤–∞—Ç–∞—Ä –∑–∞–≥—Ä—É–∂–µ–Ω:", uploadedAvatarData.slice(0, 50) + "...");
    };
    reader.readAsDataURL(file);
  } catch (e) {
    console.error("[üÜï] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∞–≤–∞—Ç–∞—Ä–∞:", e);
    alert("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∞–≤–∞—Ç–∞—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.");
  }
}

function handleConfirmAvatar(event) {
  try {
    event.preventDefault();
    event.stopPropagation();
    console.log("[üÜï] –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, —Å–æ–±—ã—Ç–∏–µ:", event.type);
    const descriptionText = appearanceAnswer || "";
    console.log("[üÜï] –û–ø–∏—Å–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:", descriptionText);

    const newCharacter = {
      name: nameAnswer || "–ü—É—Ç–Ω–∏–∫",
      avatar: uploadedAvatarData || null,
      generatedDescription: descriptionText,
      level: 0,
      xp: 0,
      attributes: {
        —Å–∏–ª–∞: 0, –ª–æ–≤–∫–æ—Å—Ç—å: 0, –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç: 0, —Ö–∞—Ä–∏–∑–º–∞: 0,
        –≤–æ–ª—è: 0, –¥—É—Ö: 0, –º—É–¥—Ä–æ—Å—Ç—å: 0, —ç–Ω–µ—Ä–≥–∏—è: 0
      },
      skills: [],
      habits: [],
      quests: [],
      chronicle: [],
      journal: []
    };

    createCharacterFromInit(newCharacter);
    console.log("[üÜï] –ü–µ—Ä—Å–æ–Ω–∞–∂ —Å–æ–∑–¥–∞–Ω:", JSON.stringify(newCharacter, null, 2));
    document.getElementById("avatarConfirm")?.remove(); // –£–¥–∞–ª—è–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è, –µ—Å–ª–∏ –µ—Å—Ç—å
    const onboardingModal = document.getElementById("onboardingModal");
    if (onboardingModal) {
      onboardingModal.remove();
      console.log("[üÜï] –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ —É–¥–∞–ª–µ–Ω–æ");
    }

    // –†–µ–Ω–¥–µ—Ä–∏–º –≤—Å–µ –≤–∫–ª–∞–¥–∫–∏
    import('./profile.js').then(m => m.renderProfile());
    import('./stats.js').then(m => m.renderStats());
    import('./skills.js').then(m => m.renderSkills());
    import('./quests.js').then(m => m.renderQuests());
    import('./habits.js').then(m => m.renderHabits());
    import('./chronicle.js').then(m => m.setupChronicle());
    import('./food.js').then(m => m.renderFood());
    import('./fitness.js').then(m => m.renderFitness());
    import('./money.js').then(m => m.renderMoney());
    import('./diary.js').then(m => m.renderJournal());

    showTab("profile");
    console.log("[üÜï] –û–Ω–±–æ—Ä–¥–∏–Ω–≥ –∑–∞–≤–µ—Ä—à—ë–Ω, –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≤–∫–ª–∞–¥–∫—É –ø—Ä–æ—Ñ–∏–ª—è");
  } catch (e) {
    console.error("[üÜï] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:", e);
    alert("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –±—Ä–∞—É–∑–µ—Ä–∞.");
  }
}

export { showOnboardingModal };