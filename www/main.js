import { ensureApiKey } from './services/apiKeyManager.js';
import { showOnboardingModal } from './ui/onboarding.js';
import { loadCharacter } from './core/character.js';
import { showTab, bindTabButtons, bindToggleSidebar, showNotification } from './ui/app.js';
import { renderProfile } from './ui/profile.js';
import { renderStats } from './ui/stats.js';
import { renderSkills } from './ui/skills.js';
import { renderQuests } from './ui/quests.js';
import { renderHabits } from './ui/habits.js';
import { setupChronicle } from './ui/chronicle.js';
import { renderJournal } from './ui/diary.js';
import { renderFood } from './ui/food.js';
import { renderFitness } from './ui/fitness.js';
import { renderMoney } from './ui/money.js';

const isDebug = false; // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º

function log(...args) {
  if (isDebug) console.log('[üöÄ]', ...args);
}

document.addEventListener('DOMContentLoaded', () => {
  log('–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è NomadPath');

  // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –≤–≤–æ–¥ API-–∫–ª—é—á–∞
  log('–ü—Ä–æ–≤–µ—Ä—è–µ–º API-–∫–ª—é—á');
  try {
    ensureApiKey();
  } catch (e) {
    log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ API-–∫–ª—é—á–∞:', e);
    showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ API-–∫–ª—é—á–∞', 'error');
  }

  // 2. –ù–∞–≤–∏–≥–∞—Ü–∏—è
  log('–ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏');
  try {
    bindTabButtons();
    bindToggleSidebar();
  } catch (e) {
    log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–≤—è–∑–∫–µ –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏–ª–∏ —Ç—Ä–∏–≥–≥–µ—Ä–∞:', e);
    showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏', 'error');
  }

  // 3. –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
  log('–ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–∞');
  const character = loadCharacter();

  if (!character) {
    log('–ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º –æ–Ω–±–æ—Ä–¥–∏–Ω–≥');
    try {
      showOnboardingModal();
    } catch (e) {
      log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞:', e);
      showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞', 'error');
    }
    return;
  }

  log('–ü–µ—Ä—Å–æ–Ω–∞–∂ –∑–∞–≥—Ä—É–∂–µ–Ω:', JSON.stringify(character));

  // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
  if (!character.skills || !Array.isArray(character.skills) ||
      !character.attributes || typeof character.attributes !== 'object' ||
      !character.chronicle || !Array.isArray(character.chronicle) ||
      !character.journal || !Array.isArray(character.journal) ||
      !character.fitnessActivities || !Array.isArray(character.fitnessActivities)) {
    log('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:', JSON.stringify(character));
    showNotification('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞', 'error');
    return;
  }

  // 5. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –≤–∫–ª–∞–¥–æ–∫
  log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—Å–µ –≤–∫–ª–∞–¥–∫–∏');
  try {
    renderProfile();
    renderStats();
    renderSkills();
    renderQuests();
    renderHabits();
    setupChronicle();
    renderJournal();
    renderFood();
    renderFitness();
    renderMoney();
  } catch (e) {
    log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≤–∫–ª–∞–¥–æ–∫:', e);
    showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∫–ª–∞–¥–æ–∫', 'error');
  }

  // 6. –ü–æ–∫–∞–∑–∞—Ç—å –≤–∫–ª–∞–¥–∫—É "–ü—Ä–æ—Ñ–∏–ª—å" –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  log('–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–∫–ª–∞–¥–∫—É "–ü—Ä–æ—Ñ–∏–ª—å"');
  try {
    showTab('profile');
  } catch (e) {
    log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –≤–∫–ª–∞–¥–∫–∏ "–ü—Ä–æ—Ñ–∏–ª—å":', e);
    showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ—Ñ–∏–ª—è', 'error');
  }
});

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞–≤—ã–∫–æ–≤
window.refreshSkills = () => {
  log('–í—ã–∑–≤–∞–Ω refreshSkills –∏–∑ window');
  try {
    renderSkills();
  } catch (e) {
    log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–∞–≤—ã–∫–æ–≤:', e);
    showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–∞–≤—ã–∫–æ–≤', 'error');
  }
};