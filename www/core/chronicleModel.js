// core/chronicleModel.js

import { loadCharacter, saveCharacter } from './character.js';

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –≤—Å–µ—Ö —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –ª–µ—Ç–æ–ø–∏—Å–∏.
 * @returns {string[]}
 */
function getChronicle() {
  const character = loadCharacter();
  character.chronicle = character.chronicle || [];
  return character.chronicle;
}

/**
 * –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –∞–±–∑–∞—Ü –∏–ª–∏ —Å—Ü–µ–Ω—É –≤ –ª–µ—Ç–æ–ø–∏—Å—å.
 * @param {string} entry ‚Äî —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
 */
function addToChronicle(entry) {
  if (!entry || typeof entry !== 'string') return;
  const character = loadCharacter();
  character.chronicle = character.chronicle || [];
  character.chronicle.push(entry.trim());
  saveCharacter(character);
}

/**
 * –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–∞–µ—Ç –≤—Å–µ –∑–∞–ø–∏—Å–∏ –ª–µ—Ç–æ–ø–∏—Å–∏.
 */
function clearChronicle() {
  // üî• –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Å—Ç–∏—Ä–∞–µ–º –≤—Å—ë
  const character = loadCharacter();
  const cleared = { ...character, chronicle: [] };
  saveCharacter(cleared); // ‚úÖ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∫–æ–ø–∏—é
}

/**
 * –û–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤—Å–µ –∑–∞–ø–∏—Å–∏ –ª–µ—Ç–æ–ø–∏—Å–∏ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ ‚Äî –Ω–æ–≤—ã–µ —Å–≤–µ—Ä—Ö—É.
 * @returns {string}
 */
function getChronicleText() {
  return getChronicle().slice().reverse().join('\n\n');
}

export {
  getChronicle,
  addToChronicle,
  clearChronicle,
  getChronicleText
};
